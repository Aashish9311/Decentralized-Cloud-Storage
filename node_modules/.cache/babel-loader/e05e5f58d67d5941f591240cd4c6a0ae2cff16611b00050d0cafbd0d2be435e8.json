{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhaaa\\\\FP\\\\Decentralized-cloud\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Display.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = ({\n  contract,\n  account\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const getdata = async () => {\n    let dataArray;\n    const Otheraddress = document.querySelector(\".address\").value;\n    try {\n      if (Otheraddress) {\n        dataArray = await contract.display(Otheraddress);\n      } else {\n        dataArray = await contract.display(account);\n      }\n    } catch (e) {\n      alert(\"You don't have access\");\n      return;\n    }\n    if (dataArray && dataArray.length > 0) {\n      const files = dataArray.map(item => {\n        const ipfsPath = item.startsWith(\"ipfs://\") ? item.substring(6) : item;\n        const fileUrl = `${ipfsPath}`;\n        const CID = ipfsPath.substring(34); // Extract CID\n\n        return {\n          fileUrl,\n          CID\n        };\n      });\n      setData(files);\n    } else {\n      alert(\"No files to display\");\n    }\n  };\n  const handleClick = async fileUrl => {\n    const width = 800;\n    const height = 600;\n    const left = (window.innerWidth - width) / 2;\n    const top = (window.innerHeight - height) / 2;\n    const popupWindow = window.open(\"\", \"FilePopup\", `width=${width},height=${height},top=${top},left=${left}`);\n    if (popupWindow) {\n      try {\n        const response = await axios.head(fileUrl);\n        const mimeType = response.headers[\"content-type\"];\n        let content;\n        if (mimeType.startsWith(\"image/\")) {\n          content = `<img src=\"${fileUrl}\" style=\"max-width:100%; max-height:100%; display:block;\" />`;\n        } else if (mimeType.startsWith(\"video/\")) {\n          content = `<video src=\"${fileUrl}\" controls style=\"max-width:100%; max-height:100%; display:block;\"></video>`;\n        } else if (mimeType.startsWith(\"audio/\")) {\n          content = `<audio src=\"${fileUrl}\" controls style=\"width:100%;\"></audio>`;\n        } else if (mimeType === \"application/pdf\") {\n          content = `<iframe src=\"${fileUrl}\" style=\"width:100%; height:100%; border:none;\"></iframe>`;\n        } else {\n          content = `<p>File cannot be previewed. <a href=\"${fileUrl}\" target=\"_blank\" rel=\"noopener noreferrer\">Download</a></p>`;\n        }\n        popupWindow.document.write(`<html><body style=\"margin:0; overflow:hidden;\">${content}</body></html>`);\n      } catch (error) {\n        popupWindow.document.write(`<html><body style=\"margin:20px; color:red;\">Error: Unable to load the file.</body></html>`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: data.map(({\n        fileUrl,\n        CID\n      }, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-button\",\n        onClick: () => handleClick(fileUrl),\n        children: CID\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Address\",\n        className: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: getdata,\n        children: \"Get Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Display, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Display","contract","account","_s","data","setData","getdata","dataArray","Otheraddress","document","querySelector","value","display","e","alert","length","files","map","item","ipfsPath","startsWith","substring","fileUrl","CID","handleClick","width","height","left","window","innerWidth","top","innerHeight","popupWindow","open","response","head","mimeType","headers","content","write","error","className","children","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/jhaaa/FP/Decentralized-cloud/src/components/Display.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Display.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Display = ({ contract, account }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getdata = async () => {\r\n    let dataArray;\r\n    const Otheraddress = document.querySelector(\".address\").value;\r\n\r\n    try {\r\n      if (Otheraddress) {\r\n        dataArray = await contract.display(Otheraddress);\r\n      } else {\r\n        dataArray = await contract.display(account);\r\n      }\r\n    } catch (e) {\r\n      alert(\"You don't have access\");\r\n      return;\r\n    }\r\n\r\n    if (dataArray && dataArray.length > 0) {\r\n      const files = dataArray.map((item) => {\r\n        const ipfsPath = item.startsWith(\"ipfs://\") ? item.substring(6) : item;\r\n        const fileUrl = `${ipfsPath}`;\r\n        const CID = ipfsPath.substring(34); // Extract CID\r\n\r\n        return { fileUrl, CID };\r\n      });\r\n\r\n      setData(files);\r\n    } else {\r\n      alert(\"No files to display\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async (fileUrl) => {\r\n    const width = 800;\r\n    const height = 600;\r\n    const left = (window.innerWidth - width) / 2;\r\n    const top = (window.innerHeight - height) / 2;\r\n\r\n    const popupWindow = window.open(\r\n      \"\",\r\n      \"FilePopup\",\r\n      `width=${width},height=${height},top=${top},left=${left}`\r\n    );\r\n\r\n    if (popupWindow) {\r\n      try {\r\n        const response = await axios.head(fileUrl);\r\n        const mimeType = response.headers[\"content-type\"];\r\n\r\n        let content;\r\n        if (mimeType.startsWith(\"image/\")) {\r\n          content = `<img src=\"${fileUrl}\" style=\"max-width:100%; max-height:100%; display:block;\" />`;\r\n        } else if (mimeType.startsWith(\"video/\")) {\r\n          content = `<video src=\"${fileUrl}\" controls style=\"max-width:100%; max-height:100%; display:block;\"></video>`;\r\n        } else if (mimeType.startsWith(\"audio/\")) {\r\n          content = `<audio src=\"${fileUrl}\" controls style=\"width:100%;\"></audio>`;\r\n        } else if (mimeType === \"application/pdf\") {\r\n          content = `<iframe src=\"${fileUrl}\" style=\"width:100%; height:100%; border:none;\"></iframe>`;\r\n        } else {\r\n          content = `<p>File cannot be previewed. <a href=\"${fileUrl}\" target=\"_blank\" rel=\"noopener noreferrer\">Download</a></p>`;\r\n        }\r\n\r\n        popupWindow.document.write(\r\n          `<html><body style=\"margin:0; overflow:hidden;\">${content}</body></html>`\r\n        );\r\n      } catch (error) {\r\n        popupWindow.document.write(\r\n          `<html><body style=\"margin:20px; color:red;\">Error: Unable to load the file.</body></html>`\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"display-container\">\r\n  <div className=\"file-list\">\r\n    {data.map(({ fileUrl, CID }, index) => (\r\n      <button\r\n        key={index}\r\n        className=\"file-button\"\r\n        onClick={() => handleClick(fileUrl)}\r\n      >\r\n        {CID}\r\n      </button>\r\n    ))}\r\n  </div>\r\n  <div className=\"input-container\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Enter Address\"\r\n      className=\"address\"\r\n    />\r\n    <button className=\"button\" onClick={getdata}>\r\n      Get Data\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default Display;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}